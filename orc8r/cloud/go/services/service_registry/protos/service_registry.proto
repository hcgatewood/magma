/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package magma.orc8r.service_registry;

option go_package = "protos";

// ServiceRegistry supports dynamic service discovery.
service ServiceRegistry {
  // ListAllServices returns the service name of all services in the registry.
  rpc ListAllServices (ListAllServicesRequest) returns (ListAllServicesResponse) {}

  // FindServices returns the names of all services that have the passed label.
  rpc FindServices (FindServicesRequest) returns (FindServicesResponse) {}

  // GetAddress returns the service address of a given service.
  rpc GetAddress (GetAddressRequest) returns (GetAddressResponse) {}

  // GetHTTPServerAddress returns the address for a service's HTTP server.
  rpc GetHTTPServerAddress (GetHTTPServerAddressRequest) returns (GetHTTPServerAddressResponse) {}

  // GetAnnotation returns the annotation value for the passed annotation
  // name.
  rpc GetAnnotation(GetAnnotationRequest) returns (GetAnnotationResponse) {}
}

message ListAllServicesRequest {}

message ListAllServicesResponse {
  repeated string services = 1;
}

message FindServicesRequest {
  string label = 1;
}

message FindServicesResponse {
  repeated string services = 1;
}

message GetAddressRequest {
  string service = 1;
}

message GetAddressResponse {
  string address = 1;
}

message GetHTTPServerAddressRequest {
  string service = 1;
}

message GetHTTPServerAddressResponse {
  string address = 1;
}

message GetAnnotationRequest {
  string service = 1;
  string annotation = 2;
}

message GetAnnotationResponse {
  string annotation_value = 1;
}
